name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    
  Linting:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.6"]
        
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
                    
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          make build-dev
          pip install -e '.[dev]'

      - name: Lint with isort, black, docformatter, flake8
        run: |
          make autoformat
          make lint
    
  Documentation:
    needs: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
                
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
                    
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
    
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          make build-dev
          pip install -e '.[dev]'
            
        # Dont generate docs yet, need to configure this properly
        # -   name: Generate Docs
        #     run: |
        #         make docs-build

  Build:
    needs: Documentation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: ["3.6", "3.7", "3.8"]
                
    steps:
      - uses: actions/checkout@v2
            
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
                
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow keras
          make build-dev
          pip install -e '.[dev]'
      
      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          make test-cov
      
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
