#!/bin/bash

# List of experiments to run for control network (2d unet)
#
# @usage (from terminal/command line):
# ./unet_2d-control-exps GPU_ID(s)
# eg: "./unet_2d-control-exps 0", "./unet_2d-control-exps 0,1"
#
# @initialization protocol:
#   1. run "chmod +x unet_2d-control-exps" from the command line
#
# @author: Arjun Desai, Stanford University
#          (c) Stanford University, 2019

TOTAL_EXPS=(1)

if [ $# -lt 1 ]; then
	echo "Please provide gpus to run inference on in format `0` for single gpu or `0,1,2` for multiple gpus"
	exit 125
fi

if [ $# -lt 2 ]; then
	echo "Please provide experiment to run"
	exit 125
fi

GPU=$1
EXP=($2)

# Navigate to project directory
cd ../..

BASE_ARG_STR="--use_step_decay -g $GPU --experiment control"

# Exp 1: Early stopping
if [[ "$EXP" -eq 1 ]]; then
python -m oai_train unet_2d --use_early_stopping --early_stopping_min_delta 1e-4 --early_stopping_patience 4 --save_all_weights $BASE_ARG_STR
python -m oai_train unet_2d --use_early_stopping --early_stopping_min_delta 1e-4 --early_stopping_patience 6 --save_all_weights $BASE_ARG_STR
python -m oai_train unet_2d --use_early_stopping --early_stopping_min_delta 1e-4 --early_stopping_patience 2 --save_all_weights $BASE_ARG_STR
python -m oai_train unet_2d --use_early_stopping --early_stopping_min_delta 1e-3 --early_stopping_patience 4 --save_all_weights $BASE_ARG_STR
python -m oai_train unet_2d --use_early_stopping --early_stopping_min_delta 1e-5 --early_stopping_patience 4 --save_all_weights $BASE_ARG_STR
fi

# Exp 2: Training Batch Size
if [[ "$EXP" -eq 2 ]]; then
python -m oai_train unet_2d --train_batch_size 6 $BASE_ARG_STR
python -m oai_train unet_2d --train_batch_size 12 $BASE_ARG_STR
python -m oai_train unet_2d --train_batch_size 24 $BASE_ARG_STR
fi
